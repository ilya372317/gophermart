// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handler/balance.go

// Package handler_mock is a generated GoMock package.
package handler_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserBalanceStorage is a mock of UserBalanceStorage interface.
type MockUserBalanceStorage struct {
	ctrl     *gomock.Controller
	recorder *MockUserBalanceStorageMockRecorder
}

// MockUserBalanceStorageMockRecorder is the mock recorder for MockUserBalanceStorage.
type MockUserBalanceStorageMockRecorder struct {
	mock *MockUserBalanceStorage
}

// NewMockUserBalanceStorage creates a new mock instance.
func NewMockUserBalanceStorage(ctrl *gomock.Controller) *MockUserBalanceStorage {
	mock := &MockUserBalanceStorage{ctrl: ctrl}
	mock.recorder = &MockUserBalanceStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserBalanceStorage) EXPECT() *MockUserBalanceStorageMockRecorder {
	return m.recorder
}

// GetWithdrawalSumByUserID mocks base method.
func (m *MockUserBalanceStorage) GetWithdrawalSumByUserID(arg0 context.Context, arg1 uint) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawalSumByUserID", arg0, arg1)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawalSumByUserID indicates an expected call of GetWithdrawalSumByUserID.
func (mr *MockUserBalanceStorageMockRecorder) GetWithdrawalSumByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawalSumByUserID", reflect.TypeOf((*MockUserBalanceStorage)(nil).GetWithdrawalSumByUserID), arg0, arg1)
}
