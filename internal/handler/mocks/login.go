// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handler/login.go

// Package handler_mock is a generated GoMock package.
package handler_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/ilya372317/gophermart/internal/entity"
)

// MockLoginStorage is a mock of LoginStorage interface.
type MockLoginStorage struct {
	ctrl     *gomock.Controller
	recorder *MockLoginStorageMockRecorder
}

// MockLoginStorageMockRecorder is the mock recorder for MockLoginStorage.
type MockLoginStorageMockRecorder struct {
	mock *MockLoginStorage
}

// NewMockLoginStorage creates a new mock instance.
func NewMockLoginStorage(ctrl *gomock.Controller) *MockLoginStorage {
	mock := &MockLoginStorage{ctrl: ctrl}
	mock.recorder = &MockLoginStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoginStorage) EXPECT() *MockLoginStorageMockRecorder {
	return m.recorder
}

// GetUserByLogin mocks base method.
func (m *MockLoginStorage) GetUserByLogin(ctx context.Context, login string) (*entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByLogin", ctx, login)
	ret0, _ := ret[0].(*entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByLogin indicates an expected call of GetUserByLogin.
func (mr *MockLoginStorageMockRecorder) GetUserByLogin(ctx, login interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByLogin", reflect.TypeOf((*MockLoginStorage)(nil).GetUserByLogin), ctx, login)
}
