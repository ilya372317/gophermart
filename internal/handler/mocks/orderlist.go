// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handler/orderlist.go

// Package handler_mock is a generated GoMock package.
package handler_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/ilya372317/gophermart/internal/entity"
)

// MockOrderListStorage is a mock of OrderListStorage interface.
type MockOrderListStorage struct {
	ctrl     *gomock.Controller
	recorder *MockOrderListStorageMockRecorder
}

// MockOrderListStorageMockRecorder is the mock recorder for MockOrderListStorage.
type MockOrderListStorageMockRecorder struct {
	mock *MockOrderListStorage
}

// NewMockOrderListStorage creates a new mock instance.
func NewMockOrderListStorage(ctrl *gomock.Controller) *MockOrderListStorage {
	mock := &MockOrderListStorage{ctrl: ctrl}
	mock.recorder = &MockOrderListStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderListStorage) EXPECT() *MockOrderListStorageMockRecorder {
	return m.recorder
}

// GetOrderListByUserID mocks base method.
func (m *MockOrderListStorage) GetOrderListByUserID(arg0 context.Context, arg1 uint) ([]entity.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderListByUserID", arg0, arg1)
	ret0, _ := ret[0].([]entity.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderListByUserID indicates an expected call of GetOrderListByUserID.
func (mr *MockOrderListStorageMockRecorder) GetOrderListByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderListByUserID", reflect.TypeOf((*MockOrderListStorage)(nil).GetOrderListByUserID), arg0, arg1)
}
