// Code generated by MockGen. DO NOT EDIT.
// Source: internal/handler/withdrawallist.go

// Package handler_mock is a generated GoMock package.
package handler_mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entity "github.com/ilya372317/gophermart/internal/entity"
)

// MockWithdrawalListStorage is a mock of WithdrawalListStorage interface.
type MockWithdrawalListStorage struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawalListStorageMockRecorder
}

// MockWithdrawalListStorageMockRecorder is the mock recorder for MockWithdrawalListStorage.
type MockWithdrawalListStorageMockRecorder struct {
	mock *MockWithdrawalListStorage
}

// NewMockWithdrawalListStorage creates a new mock instance.
func NewMockWithdrawalListStorage(ctrl *gomock.Controller) *MockWithdrawalListStorage {
	mock := &MockWithdrawalListStorage{ctrl: ctrl}
	mock.recorder = &MockWithdrawalListStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawalListStorage) EXPECT() *MockWithdrawalListStorageMockRecorder {
	return m.recorder
}

// GetWithdrawalListByUserID mocks base method.
func (m *MockWithdrawalListStorage) GetWithdrawalListByUserID(arg0 context.Context, arg1 uint) ([]entity.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawalListByUserID", arg0, arg1)
	ret0, _ := ret[0].([]entity.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawalListByUserID indicates an expected call of GetWithdrawalListByUserID.
func (mr *MockWithdrawalListStorageMockRecorder) GetWithdrawalListByUserID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawalListByUserID", reflect.TypeOf((*MockWithdrawalListStorage)(nil).GetWithdrawalListByUserID), arg0, arg1)
}
